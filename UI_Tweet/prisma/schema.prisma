// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  name              String
  password          String?   // Nullable for OAuth users
  image             String?   // Profile picture for OAuth users
  provider          String    @default("credentials") // "credentials", "google", "github", "twitter"
  providerAccountId String?   @unique // Unique identifier for OAuth users (e.g., Google ID)
  type              type_user @default(free) // Default to free user
  twitterOauthToken  String?  // Access Token for Twitter API
  twitterOauthSecret String?  // Access Secret for Twitter API


  subscription Subscription?
  payments Payment[]
}

enum type_user {
  free 
  pro
  premium
}

model Payment{
  id Int   @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  amount Float 
  currency String @default("INR")
  razorpayPaymentId String
  razorpayOrderId String
  planType type_user
  status String  
  createdAt DateTime @default(now())
}

model Subscription{
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId],references: [id])
  planType type_user
  startDate DateTime @default(now())
  endDate DateTime?
  status String @default("active")
  autoRenew Boolean @default(true)
  razorpaySubId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}